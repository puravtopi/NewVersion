@{
    ViewData["Title"] = "Download Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .dt-control {
        cursor: pointer;
    }

    .collapsible {
        
        cursor: pointer;
        padding: 8px;
        width: 100%;
        border: none;
        text-align: left;
        outline: none;
        font-size: 15px;
    }

    .content,.bscontent,.letterscontent,otherscontent {
        padding: 0 18px;
        display: none;
        overflow: hidden;
        background-color: #f1f1f1;
    }

        .content, .bscontent, .letterscontent, otherscontent input[type="checkbox"] {
      /*       margin-right: 10px; */
               
        }

    #sign, #bssign, #letterssign, #otherssign, .sign {
            background-color:white;
            border: 1px solid #ccc;
            width:20px !important;
            height:20px;
            font-size:12px;
            font-weight:600;
            text-align:center;
            vertical-align:middle;
            display:inline-block;
        }

</style>
<main id="main" class="main">

    <div class="pagetitle">
        <h1>Download forms</h1>
        <nav>
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="index.html">Home</a></li>
                <li class="breadcrumb-item active">List</li>
            </ol>
        </nav>
        <a asp-action="Manage" asp-controller="Forms" class="btn btn-outline-secondary">Manage</a>
    </div><!-- End Page Title -->

    <section class="section">
        <div class="row">
   @*          <button class="collapsible" onclick="ChkToggle();"><span id="sign">+</span>  Forms</button>
            <div class="content">
                @foreach(var pdf in ViewBag.pdffiles)
                {
                    <div style="display:block" >
                        <input type="checkbox" id="pdfCheckbox" name="pdfCheckbox" value="Forms/@pdf" class="pdfCheckbox" />@pdf
                    </div>
                }
            </div>
            <button class="collapsible" onclick="ChkBSToggle();"><span id="bssign">+</span>  BS</button>
            <div class="bscontent">
                @foreach (var pdf in ViewBag.bsfiles)
                {
                    <div style="display:block">
                        <input type="checkbox" id="pdfCheckbox" name="pdfCheckbox" value="BS/@pdf" class="pdfCheckbox" />@pdf
                    </div>

                }
            </div>
            <button class="collapsible" onclick="ChkLettersToggle();"><span id="letterssign">+</span>  Letters</button>
            <div class="letterscontent">
                @foreach (var pdf in ViewBag.lettersfiles)
                {
                    <div style="display:block">
                        <input type="checkbox" id="pdfCheckbox" name="pdfCheckbox" value="Letters/@pdf" class="pdfCheckbox" />@pdf
                    </div>

                }
            </div>
            <button class="collapsible" onclick="ChkOthersToggle();"><span id="otherssign">+</span>  Others</button>
            <div class="otherscontent">
                @foreach (var pdf in ViewBag.othersfiles)
                {
                    <div style="display:block">
                        <input type="checkbox" id="pdfCheckbox" name="pdfCheckbox" value="Others/@pdf" class="pdfCheckbox" />@pdf
                    </div>

                }
            </div>
 *@
            @{
                ViewBag.Title = "PDF Files by Folder";
                var filesByFolder = ViewBag.FilesByFolder as Dictionary<string, List<string>>;
            }

            @foreach (var folder in filesByFolder)
            {
                <button class="collapsible" onclick="toggleContent('@folder.Key');">
                    <span id="@folder.Key-sign" class="sign">+</span> @folder.Key
                </button>
                <div class="@folder.Key-content" style="display:none;">
                    @foreach (var pdf in folder.Value)
                    {
                        <div>
                            <input type="checkbox" id="pdfCheckbox" name="pdfCheckbox" value="@folder.Key/@pdf" class="pdfCheckbox" />@pdf

                        </div>
                    }
                </div>
            }


        </div>
        <div class="row">
            <div class="col-lg-12">



                <div class="card">
                    <div class="card-body">
                        <div>   
                            <input name="txt_date" id="txt_date" type="text" placeholder="Print Date" />
                            <input name="txt_surgery" id="txt_surgery" type="text" placeholder="Surgery Date" />
                             <input name="txt_docName" type="text" id="txt_docName" placeholder="Doctor&#39;s Name"  />
                             <input name="txt_MCode_Proc" type="text" id="txt_MCode_Proc" placeholder="Mcode" />
                                 
                            <input name="txtProcedureCode" type="text" id="txtProcedureCode" placeholder="Procedure Code" />
                        </div>

                        <div class="row mb-3">
                        

                            @*     <div class="col-md-12 col-lg-12">
                                <a class="btn btn-success" style="float:right" asp-action="Create" asp-controller="Visit">Add New</a>
                            </div> *@
                        </div>
                        <!-- Table with hoverable rows -->
                        <table id="tbl" class="table table-striped table-bordered dt-responsive nowrap" width="100%" cellspacing="0">
                            <thead>
                                <tr>
                                    <th scope="col">First Name</th>
                                    <th scope="col">Last Name</th>
                                    <th scope="col">DOA</th>
                                    <th scope="col">DOE</th>
                                    <th scope="col">Case Type</th>
                                    <th scope="col">Location</th>
                                    <th>Action</th>
                                </tr>
                            </thead>

                        </table>
                        <!-- End Table with hoverable rows -->

                    </div>
                </div>



            </div>
        </div>
    </section>
    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
    <link href="~/lib/bootstrap/dist/css/bootstrap.css" rel="stylesheet" />

    <link href="https://cdn.datatables.net/1.10.15/css/dataTables.bootstrap.min.css" rel="stylesheet" />
    <link href="https://cdn.datatables.net/responsive/2.1.1/css/responsive.bootstrap.min.css" rel="stylesheet" />
    <script src="https://cdn.datatables.net/1.10.15/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.10.15/js/dataTables.bootstrap4.min.js "></script>
    <script>


        $(document).ready(function () {
            bindList();
        });
        function callPage1() {
            var url = '@Url.Action("IeToFuPage1","Visit",new { ie_id = "id" , fu_id=""})';
            $.ajax({
                type: "POST",
                url: url,
                data: "",
                success: function (response) {
                    // alert(JSON.stringify( response.data));


                    alert(JSON.stringify(response.data));
                }
            });
        }
        function format(d) {
            // `d` is the original data object for the row

            // alert(JSON.stringify(d));
            var id = d.id;
            var url = '@Url.Action("FuList","Visit",new { id = "id" })';

            let childtab = document.createElement("table");
            childtab.className = "table table-stripped";
            let head = "<tr>";
            head += "<th>  FName </th>";
            head += "<th>  LName </th>";
            head += "<th>  DOB </th>";
            head += "<th>  DOA </th>";
            head += "<th>  DOE </th>";
            head += "<th>  Case Type </th>";
            head += "<th>  Location </th>";
            head += "<th>  Action </th>";
            head += "</tr>";
            childtab.innerHTML += head;

            $.ajax({
                type: "POST",
                url: url,
                data: "",
                success: function (response) {
                    // alert(JSON.stringify( response.data));
                    $.each(response.data, function (key, value) {

                        let row = "<tr>";
                        row += "<td>" + value.fname + "</td>";
                        row += "<td>" + value.lname + "</td>";
                        row += "<td>" + value.dob + "</td>";
                        row += "<td>" + value.doa + "</td>";
                        row += "<td>" + value.doe + "</td>";
                        row += "<td>" + value.compensation + "</td>";
                        row += "<td>" + value.location + "</td>";
                        row += "<td><a onclick='callPage1()' href='#' >Test</a></td>";
                        childtab.innerHTML += row;

                    });

                    //  alert("Hello");
                }
            });

            return (

                childtab
            );
        }


        function bindList() {

            var url = '@Url.Action("List","Forms")';
            var downloadurl = '@Url.Action("downloads","Forms")';


            var tab = $("#tbl").DataTable({
                "lengthMenu": [[25, 50, 100, -1], [25, 50, 100, "All"]],
                "pageLength": 25,
                "processing": true, // for show progress bar
                "serverSide": true, // for process server side
                "filter": true, // this is for disable filter (search box)
                "orderMulti": false, // for disable multiple column at once
                "ajax": {
                    "url": url,
                    "type": "POST",
                    "datatype": "json"
                },
                //"columnDefs":
                //    [{
                //        "targets": [0],
                //        "visible": false,
                //        "searchable": false
                //    }],
                "columns": [
                    // {
                    //     "className": 'dt-control',


                    //     "data": "compensation",
                    //     "defaultContent": '',
                    //     "render": function (value) {
                    //         console.log("+" + value)
                    //         if (value == 0)
                    //             return "";
                    //         else
                    //             return "➕";
                    //     }
                    // },
                    { "data": "lname", "lname": "lname", "autoWidth": true },
                    { "data": "fname", "fname": "fname", "autoWidth": true },                
                 

                    {
                        "data": "doe", "autoWidth": true,
                        "type": "date ",
                        "render": function (value) {

                            if (value === null) return "";

                            var date = new Date(value);
                            var month = date.getMonth() + 1;
                            return (month.toString().length > 1 ? month : "0" + month) + "/" + date.getDate() + "/" + date.getFullYear();
                        }
                    },
                    {
                        "data": "doa", "autoWidth": true,
                        "type": "date ",
                        "render": function (value) {

                            if (value === null) return "";

                            var date = new Date(value);
                            var month = date.getMonth() + 1;
                            return (month.toString().length > 1 ? month : "0" + month) + "/" + date.getDate() + "/" + date.getFullYear();
                        }
                    },
                    {
                        "data": "compensation", "autoWidth": true 

                        
                    },
                    { "data": "location", "location": "location", "autoWidth": true },
                    {
                        "render": function (data, type, full, meta) {
                        //    console.log(full);
                            var fname=full.fname;
                            var lname = full.lname;
                            var index = '<a onclick="DownloadPdf(' + full.patient_id + ',' + '\'' + fname + '\','+ '\'' + lname + '\')" ><i class=" ri-file-download-fill" data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-original-title="Download"></i></a> &nbsp; &nbsp;'
                            return index;
                        }
                    }


                ]

            });

            tab.on('click', 'td.dt-control', function (e) {
                let tr = e.target.closest('tr');
                let row = tab.row(tr);
                // console.log(JSON.stringify( row.data()));
                if (row.data().compensation > 0) {
                    if (row.child.isShown()) {
                        // This row is already open - close it
                        row.child.hide();
                    }
                    else {
                        // Open this row
                        row.child(format(row.data())).show();
                    }
                }
            });

        }
        function DownloadPdf(id,fname,lname){
            var downloadurl = '@Url.Action("GeneratePdf","Forms")';
            //alert(fname);
            var checkboxes = $('.pdfCheckbox');
            var txt_date = $("#txt_date").val();    
            var txt_surgery = $("#txt_surgery").val();
            var txt_docName = $("#txt_docName").val();
            var txt_MCode_Proc = $("#txt_MCode_Proc").val();
            var txtProcedureCode = $("#txtProcedureCode").val();
            // Loop through each checkbox element
            checkboxes.each(function (index, checkbox) {
                // Do something with the checkbox element
                var isChecked = $(checkbox).prop('checked');
                console.log(isChecked);
                console.log($(checkbox).val());
                if (isChecked) {
                    console.log($(checkbox).val());
                    downloadurl = downloadurl + '?pdffile=' + $(checkbox).val() + '&id=' + id + '&txt_date=' + txt_date + '&txt_surgery=' + txt_surgery + '&txt_docName=' + txt_docName + '&txt_MCode_Proc=' + txt_MCode_Proc + '&txtProcedureCode='+ txtProcedureCode ;
                    fetch(downloadurl)
                        .then(response => {
                            if (!response.ok) {
                                throw new Error(`HTTP error! Status: ${response.status}`);
                            }
                            console.log(response);
                            return response.blob();
                        })
                        .then(blob => {
                            // Handle the Excel file data here
                            
                            var link = document.createElement('a');
                            link.href = window.URL.createObjectURL(blob);
                            link.download = lname+","+fname+"_"+$(checkbox).val();
                            link.click();
                        })
                        .catch(error => {
                            console.error('Error downloading Excel file:', error);
                        });

                }
            });
        }

        function DeleteData(CustomerID) {
            if (confirm("Are you sure you want to delete ...?")) {
                Delete(CustomerID);
            }
            else {
                return false;
            }
        }


        function Delete(CustomerID) {
            var url = '@Url.Content("~/")' + "DemoGrid/Delete";

            $.post(url, { ID: CustomerID }, function (data) {
                if (data) {
                    oTable = $('#example').DataTable();
                    oTable.draw();
                }
                else {
                    alert("Something Went Wrong!");
                }
            });
        }

        function ChkToggle(){
            $('.content').toggle();
            if($("#sign").text() == "+")
            {
                $("#sign").text("-") ;
            }
            else
            {
                $("#sign").text("+") ;
            }
        }
         function ChkBSToggle(){
            $('.bscontent').toggle();
            if($("#bssign").text() == "+")
            {
                $("#bssign").text("-") ;
            }
            else
            {
                $("#bssign").text("+") ;
            }
        }
        function ChkLettersToggle() {
            $('.letterscontent').toggle();
            if ($("#letterssign").text() == "+") {
                $("#letterssign").text("-");
            }
            else {
                $("#letterssign").text("+");
            }
        }
        function ChkOthersToggle() {
            $('.otherscontent').toggle();
            if ($("#otherssign").text() == "+") {
                $("#otherssign").text("-");
            }
            else {
                $("#otherssign").text("+");
            }
        }
        function toggleContent(contentClass) {
            var content = document.querySelector('.' + contentClass + '-content');
            var sign = document.getElementById(contentClass + '-sign');
            if (content.style.display === "block") {
                content.style.display = "none";
                sign.innerText = "+";
            } else {
                content.style.display = "block";
                sign.innerText = "-";
            }
        }


    </script>
</main>